language: go
go:
- 1.9
go_import_path: github.com/kubeapps/kubeapps

env:
  global:
  - VERSION=${TRAVIS_TAG:-build-$TRAVIS_BUILD_ID}

install:
- |
  if ! which kubecfg; then
    wget -O kubecfg https://github.com/ksonnet/kubecfg/releases/download/v0.7.2/kubecfg-$(go env GOOS)-$(go env GOARCH)
    install -m 755 kubecfg $GOPATH/bin/kubecfg
  fi

jobs:
  include:
  - stage: test
    env: PROJECT=go
    script: make test
  - stage:
    env: PROJECT=dashboard
    language: node_js
    node_js:
    - "8"
    install: yarn --cwd=dashboard
    script:
    - yarn --cwd=dashboard run lint
    - yarn --cwd=dashboard run test

  # parallel build stages
  - &cliBuild
    stage: build
    env: BINARY=kubeapps-linux-amd64
    script: make
    deploy:
    - provider: releases
      api_key:
        secure: "G12zyBAoQbXsQWr86S5GLMdwfoQKk2Cwk+JmQ26jc1jd4UxZXZudLlSBgsiU2r+/+7G2UrpsZqaF7phQCd7K2R9kaCMSm0fzrF2VW6zRwnctxrnAIUOaakHAe8QC7a1ZohJxbreFVRatV0n20op4RcZy7Lgvz7UprJohYVM2/m8jPkn+gDsUw4/Lk2FKCpj2fSIaHk2wr4GImSRDtpuFjts1h3Sbo0FKiLAec/6eMHAWPAabliFtA+M2XTEViFzgad2EJgxk1jjdIsDaK+9tTBGT6P3Y6K4OvlwUTZsX1KqJY6X9Msb1JHzn7fvHYbRfOadlCwV4rw5BeOkIff6kUn1SDOibZIM4lrlmgqhgD8YjPI896QtCAHYYQ4ORXIMjWCX+sEdMxO0auCiBa13d/xLku+O0jGFXQcVmzftA2Y5JiEyNkTH1S6lrRrIEkRvpX+88ApzNCzqMYlIu0V/tJdajsrwSeB5t39YGSo06k76GqytHSmtifjYStrWro0pSn6Pws+6hox5QCjEnnCMuauE8U58dKulfEI5/G9gcU2b1EDOWMNyquIYNRT0TxL9Y8rZJiaumzBcavNszbf2JBlA14XXM//ASN7PgrAZFLZlYZUHrcXpdllnbtxrXRL+hWyMdSeGNSFWfSQxwrFrRsUjmshmRZGUlOuxdbhinJVw="
      file: $BINARY
      skip_cleanup: true
      overwrite: true
      on:
        tags: true
        branch: build-improvements
        repo: prydonius/kubeapps
  - <<: *cliBuild
    env: BINARY=kubeapps-darwin-amd64 GOOS=darwin GOOS=amd64
  - <<: *cliBuild
    env: BINARY=kubeapps-windows-amd64.exe GOOS=windows GOOS=amd64
  
  # Image builds
  - &imageBuild
    stage: build
    env: IMAGE=kubeapps/chart-repo
    install: skip
    script: make VERSION="$VERSION" $IMAGE
    after_success:
    - |
      if [[ -n "$TRAVIS_TAG" ]]; then
        docker login -u="${DOCKER_USERNAME}" -p="${DOCKER_PASSWORD}"
        docker push $IMAGE:$VERSION
      fi
  - <<: *imageBuild
    env: IMAGE=kubeapps/chartsvc
  - <<: *imageBuild
    install: yarn --cwd=dashboard
    env: IMAGE=kubeapps/dashboard
